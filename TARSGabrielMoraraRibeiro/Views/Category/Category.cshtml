<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.24/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.js"></script>

<div id="navigation" class="ibox-content" style="padding:unset;">

    <!-- Navigation -->
    @Html.Partial("_Navigation")

    <table id="example" cellspacing="0" class="table table-striped table-bordered table-condensed">
        <thead>
            <tr>
                <th scope="col">Nome</th>
                <th scope="col">Quantidade de Produtos</th>
                <th scope="col">Opções</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: features">
            <tr>
                <td data-bind="text: name"></td>
                <td data-bind="text: qtdProducts"></td>
                <td>
                    <button class="delete" title="Delete" data-toggle="tooltip" data-bind="click: $root.deleteCategory"><i class="material-icons">&#xE872;</i></button>
                    @*<a class="add" title="Add" data-toggle="tooltip"><i class="material-icons">&#xE03B;</i></a>
                        <a class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons">&#xE254;</i></a>*@
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script type="text/javascript">

    function FeatureRequest(data) {
        if (data != null) {
            this.categoryID = ko.observable(data.categoryID);
            this.name = ko.observable(data.name);
            this.qtdProducts = ko.observable(data.qtdProducts);
        }
    }

    function ViewModel() {
        try {

            var self = this;

            self.features = ko.observableArray();

            $.ajax({
                type: "GET",
                url: '/Category/ListCategorys',
                success: function (response) {
                    var mappedFeatures = $.map(response, function (item) {
                        return new FeatureRequest(item)
                    });

                    self.features(mappedFeatures);
                },
                error: function (response) {
                    console.log('Erro' + response);
                }
            });

            self.deleteCategory = (value) => {
                console.log(value);
                console.log(value.qtdProducts());
                if (value.qtdProducts() >= 1) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops..',
                        text: 'Não é possível remover a categoria, pois possui, produtos vinculados, delete os produtos primeiro.'
                    });
                } else {
                    Swal.fire({
                        title: 'Tem certeza que quer excluir a categoria ' + value.name() + '?',
                        showCancelButton: true,
                        confirmButtonText: `Excluir`,
                        confirmButtonColor: '#d33',
                    }).then((result) => {
                        /* Read more about isConfirmed, isDenied below */
                        if (result.isConfirmed) {
                            Swal.fire('Saved!', '', 'success')
                        } else if (result.isDenied) {
                            Swal.fire('Changes are not saved', '', 'info')
                        }
                    })
                    self.features.remove(value);
                }
            };

        } catch (e) {
            console.log(e);
        }
    }

    var vm = new ViewModel();

    // ativa knockout.js
    ko.applyBindings(vm);

</script>