#pragma checksum "C:\Users\gabri\Desktop\PROJETOS\Tars\TARSGabrielMoraraRibeiro\TARSGabrielMoraraRibeiro\Views\Category\Category.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "293d1fcd7c72a8c7633e911ac087f337af4d3635"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Category_Category), @"mvc.1.0.view", @"/Views/Category/Category.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\gabri\Desktop\PROJETOS\Tars\TARSGabrielMoraraRibeiro\TARSGabrielMoraraRibeiro\Views\_ViewImports.cshtml"
using TARSGabrielMoraraRibeiro;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\gabri\Desktop\PROJETOS\Tars\TARSGabrielMoraraRibeiro\TARSGabrielMoraraRibeiro\Views\_ViewImports.cshtml"
using TARSGabrielMoraraRibeiro.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"293d1fcd7c72a8c7633e911ac087f337af4d3635", @"/Views/Category/Category.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6d8855c4e635dd9293a6138c2425e00b6f79ead7", @"/Views/_ViewImports.cshtml")]
    public class Views_Category_Category : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<style>
    body {
        color: #404E67;
        background: #F5F7FA;
        font-family: 'Open Sans', sans-serif;
    }

    .table-wrapper {
        width: 700px;
        margin: 30px auto;
        background: #fff;
        padding: 20px;
        box-shadow: 0 1px 1px rgba(0,0,0,.05);
    }

    .table-title {
        padding-bottom: 10px;
        margin: 0 0 10px;
    }

        .table-title h2 {
            margin: 6px 0 0;
            font-size: 22px;
        }

        .table-title .add-new {
            float: right;
            height: 30px;
            font-weight: bold;
            font-size: 12px;
            text-shadow: none;
            min-width: 100px;
            border-radius: 50px;
            line-height: 13px;
        }

            .table-title .add-new i {
                margin-right: 4px;
            }

    table.table {
        table-layout: fixed;
    }

        table.table tr th, table.table tr td {
            border-color: #e9e9e9;");
            WriteLiteral(@"
        }

        table.table th i {
            font-size: 13px;
            margin: 0 5px;
            cursor: pointer;
        }

        table.table th:last-child {
            width: 100px;
        }

        table.table td a {
            cursor: pointer;
            display: inline-block;
            margin: 0 5px;
            min-width: 24px;
        }

            table.table td a.add {
                color: #27C46B;
            }

            table.table td a.edit {
                color: #FFC107;
            }

            table.table td a.delete {
                color: #E34724;
            }

        table.table td i {
            font-size: 19px;
        }

        table.table td a.add i {
            font-size: 24px;
            margin-right: -1px;
            position: relative;
            top: 3px;
        }

        table.table .form-control {
            height: 32px;
            line-height: 32px;
            box-shadow: none;
            b");
            WriteLiteral(@"order-radius: 2px;
        }

            table.table .form-control.error {
                border-color: #f50000;
            }

        table.table td .add {
            display: none;
        }
</style>

<div id=""navigation"" class=""ibox-content"" style=""padding:unset;"">

    <!-- Navigation -->
    ");
#nullable restore
#line 108 "C:\Users\gabri\Desktop\PROJETOS\Tars\TARSGabrielMoraraRibeiro\TARSGabrielMoraraRibeiro\Views\Category\Category.cshtml"
Write(Html.Partial("_Navigation"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

    <div class=""container-lg"">
        <div class=""table-responsive"">
            <div class=""table-wrapper"">
                <div class=""table-title"">
                    <div class=""row"">
                        <div class=""col-sm-8""><h2><b>Categorias</b></h2></div>
                        <div class=""col-sm-4"">
                            <button type=""button"" class=""btn btn-info add-new""><i class=""fa fa-plus""></i> Adicionar</button>
                        </div>
                    </div>
                </div>
                <table class=""table table-bordered"">
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>Op√ßoes</th>
                        </tr>
                    </thead>
                    <tbody id=""featuresTable"" data-bind=""foreach:features"">
                        <tr>
                            <td data-bind=""text: name""></td>
                            <td>
                      ");
            WriteLiteral(@"          <a class=""add"" title=""Add"" data-toggle=""tooltip""><i class=""material-icons"">&#xE03B;</i></a>
                                <a class=""edit"" title=""Edit"" data-toggle=""tooltip""><i class=""material-icons"">&#xE254;</i></a>
                                <a class=""delete"" title=""Delete"" data-toggle=""tooltip""><i class=""material-icons"">&#xE872;</i></a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script type=""text/javascript"">
    $(document).ready(function () {
        $('[data-toggle=""tooltip""]').tooltip();
        var actions = $(""table td:last-child"").html();

        // Append table with add row form on add new button click
        $("".add-new"").click(function () {
            $(this).attr(""disabled"", ""disabled"");
            var index = $(""table tbody tr:last-child"").index();
            var row = '<tr>' +
                '<td><input type=""text"" class=""f");
            WriteLiteral(@"orm-control"" name=""name"" id=""name""></td>' +
                '<td>' + actions + '</td>' +
                '</tr>';
            $(""table"").append(row);
            $(""table tbody tr"").eq(index + 1).find("".add, .edit"").toggle();
            $('[data-toggle=""tooltip""]').tooltip();
        });

        // Add row on add button click
        $(document).on(""click"", "".add"", function () {
            $.ajax({
                type: ""POST"",
                url: '/Category/CreatedCategory',
                data: {
                    name: $(""#name"").val()
                },
                success: function (response) {
                    console.log(response);
                    var empty = false;
                    var input = $(this).parents(""tr"").find('input[type=""text""]');
                    input.each(function () {
                        if (!$(this).val()) {
                            $(this).addClass(""error"");
                            empty = true;
                        } else");
            WriteLiteral(@" {
                            $(this).removeClass(""error"");
                        }
                    });
                    $(this).parents(""tr"").find("".error"").first().focus();
                    if (!empty) {
                        input.each(function () {
                            $(this).parent(""td"").html($(this).val());
                        });
                        $(this).parents(""tr"").find("".add, .edit"").toggle();
                        $("".add-new"").removeAttr(""disabled"");
                    }
                    alert(""Categoria adicionada com sucesso!"");
                },
                error: function (response) {
                    console.log('Erro ' + response);
                    alert(response.message);
                }
            });
        });

        // Edit row on edit button click
        $(document).on(""click"", "".edit"", function () {
            $(this).parents(""tr"").find(""td:not(:last-child)"").each(function () {
                $(this).");
            WriteLiteral(@"html('<input type=""text"" class=""form-control"" value=""' + $(this).text() + '"">');
            });
            $(this).parents(""tr"").find("".add, .edit"").toggle();
            $("".add-new"").attr(""disabled"", ""disabled"");
        });

        // Delete row on delete button click
        $(document).on(""click"", "".delete"", function () {
            $(this).parents(""tr"").remove();
            $("".add-new"").removeAttr(""disabled"");
        });
    });

    function FeatureRequest(data) {
        console.log(data);
        if (data != null) {
            this.categoryID = ko.observable(data.categoryID);
            this.name = ko.observable(data.name);
        }
    }

    function ViewModel() {
        try {

            var self = this;
            self.features = ko.observableArray();

            $.ajax({
                type: ""GET"",
                url: '/Category/ListCategorys',
                success: function (response) {
                    console.log(response);
               ");
            WriteLiteral(@"     var mappedFeatures = $.map(response, function (item) {
                        return new FeatureRequest(item)
                    });

                    self.features(mappedFeatures);
                },
                error: function (response) {
                    console.log('Erro' + response);
                }
            });

        } catch (e) {
            console.log(e);
        }
    }

    var vm = new ViewModel();

    // ativa knockout.js
    ko.applyBindings(vm);

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
